import{_ as s,c as a,d as t,o as e}from"./app-CoLZFvGU.js";const n={};function h(l,i){return e(),a("div",null,i[0]||(i[0]=[t(`<h3 id="js中的foreach可以改变原数组吗" tabindex="-1"><a class="header-anchor" href="#js中的foreach可以改变原数组吗"><span>js中的forEach可以改变原数组吗？</span></a></h3><p>昨天晚上遇到了神奇的问题forEach循环改不了数组中的变量了 代码如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-javascript"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    debugger</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">forEach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">item</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">        item</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//输出[1,2,3,4,5]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>本以为应该输出<code>[6,6,6,6,6]</code>,结果输出了<code>[1,2,3,4,5]</code>,那到底是为什么呢，为啥我改了item， 数组没变呢？百度了一下得出答案：</p><ul><li>如果数组中的值是基本类型, 改变不了;</li><li>如果是引用类型分两种情况：<br> 1、没有修改形参元素的地址值, 只是修改形参元素内部的某些属性，会改变原数组； 2、直接修改整个元素对象时，无法改变原数组；</li></ul><p>后来自己想了一下js函数的执行过程，其实感觉和foreach关系不大，和js中函数形参和实参赋值有关系，函数执行时会创建Activation Object， 等于是重新创建了变量来保存传进来的形参，所以如果是简单类型修改的是Activation Object中的变量，而不是原来的变量， 而复杂类型保存的是内存地址，除非替换整个对象，否则是修改的原有变量。</p>`,6)]))}const r=s(n,[["render",h]]),k=JSON.parse('{"path":"/skill/js/aboutForEach.html","title":"","lang":"zh-CN","frontmatter":{"description":"js中的forEach可以改变原数组吗？ 昨天晚上遇到了神奇的问题forEach循环改不了数组中的变量了 代码如下： 本以为应该输出[6,6,6,6,6],结果输出了[1,2,3,4,5],那到底是为什么呢，为啥我改了item， 数组没变呢？百度了一下得出答案： 如果数组中的值是基本类型, 改变不了; 如果是引用类型分两种情况： 1、没有修改形参元素的...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-01T08:41:35.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://github.com/Justice996/skill/js/aboutForEach.html"}],["meta",{"property":"og:site_name","content":"Justice的博客"}],["meta",{"property":"og:description","content":"js中的forEach可以改变原数组吗？ 昨天晚上遇到了神奇的问题forEach循环改不了数组中的变量了 代码如下： 本以为应该输出[6,6,6,6,6],结果输出了[1,2,3,4,5],那到底是为什么呢，为啥我改了item， 数组没变呢？百度了一下得出答案： 如果数组中的值是基本类型, 改变不了; 如果是引用类型分两种情况： 1、没有修改形参元素的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-01T08:41:35.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-01T08:41:35.000Z"}]]},"git":{"createdTime":1698828095000,"updatedTime":1698828095000,"contributors":[{"name":"justice","username":"justice","email":"1393080039@qq.com","commits":1,"url":"https://github.com/justice"}]},"readingTime":{"minutes":1.08,"words":323},"filePathRelative":"skill/js/aboutForEach.md","excerpt":"","autoDesc":true}');export{r as comp,k as data};
