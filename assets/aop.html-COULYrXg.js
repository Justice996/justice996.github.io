import{_ as i,c as a,d as n,o as l}from"./app-CoLZFvGU.js";const t={};function h(e,s){return l(),a("div",null,s[0]||(s[0]=[n(`<h3 id="aop面向切面编程" tabindex="-1"><a class="header-anchor" href="#aop面向切面编程"><span>AOP面向切面编程</span></a></h3><p>将核心代码和非核心代码分离的一种方式</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  Function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">prototype</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">before</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">beforeFn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> _this</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (){</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//中间函数</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            beforeFn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">           _this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    Function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">prototype</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">after</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">afterFn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> _this</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (){</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">           _this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//中间函数</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            afterFn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //核心代码</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(){</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    test</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(){</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(){</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>遇到新情况时，我会主动搜集尽可能多的信息。 3 我是那种真正享受日常生活中不确定性的人。 2 在做复杂或有挑战性的事情时，我会处于最佳状态。1 无论去什么地方，我都在寻找新事物或新体验。3 我把充满挑战的场合视为成长和学习的机会。2 我喜欢做那些让人感到有点恐惧的事情。2 我总是在寻找颠覆我对自己和世界认知的新体验。3 我更喜欢那些刺激又难以预测的工作。1 我经常寻找机会挑战自我，不断成长。2 我是那种对陌生的人、事情和地方敞开怀抱的人。1 结果：一点点，喜欢确定性带来的舒适感觉，对日常生活中不可预料的因素感觉不适</p><p>经历失败后，你每隔多久反思一下自己的绩效目标？1 当你被情绪困扰或遭遇棘手的困境时，你每隔多久重新评估一下自己的优势和劣势？2 你每隔多久会调整目标以便改进绩效？2 在做项目时，你有多少次能够提前看出自己最擅长哪个部分？5 你每隔多久从过往的经验教训中反思如何提升自己？3 你每隔多久向内探寻自己的行为和情绪的缘由？2 在特定情况下，有多少次你的行为导致你突然有“灵光一闪”的自我认知？2 你每隔多久会向别人（顾问、老师、上司）寻求反馈，看看自己是否朝着正确的方向前进？1 你每隔多久制定一次个人目标？3 你每隔多久把目标写下来并跟踪进展？1 你有多少次会根据别人对某项事务的兴趣程度来决定自己是否感兴趣？2 你有多少次对朋友的请求感到意外？2 结果：你倾向于把注意力集中在外部环境上，而不是集中在你自己的想法和感觉上</p><p>我能让别人觉得很有趣。1 我善于觉察别人的感受。3 我在陌生的社交场合会不知所措。1 我知道什么时候该说什么话。2 我和新认识的人能处得不错。1 我看得出是什么让别人动力十足。3 我能适应任何环境。1 结果：较低，你能通过自己的身体感受来识别情绪，比如，焦虑让你感到胃痉挛。你能识别自己想法中蕴含的情绪，比如，你知道自己是否感到高兴、难过或愤怒，并能清楚地表达你对这些感受的想法。你能识别某人的情绪诚实与否，或是否准确反映了他们的实际感受。</p><p>如何鉴别自己是真的疲惫还是懒惰不想运动？ 热身，开始运动 如果开始一段时间后还是很疲惫的话，就应该停止运动或降低今天的强度。</p><p>安全感 求知欲 安宁 亲密关系 交流沟通 潜力 热爱 勇敢 创造力 勇气 创新 精力 胜利 优秀 善良 生命力 幽默 节制 沉着冷静 与众不同 坦诚 责任 真实性 持之以恒 宽恕 天赋 真相 独立自主 慷慨 条理 克制 忠诚 专注 反思 无所畏惧 正义 玩世不恭 稳定 理智 鼓励 知足 公平 感受 感恩 满足感 耐心 孤独 平等 幸福 好奇心 下苦功 自我发展 自力更生 想象力 自由 活力 谦逊</p><p>勇气与自信 勇敢、勇气、无所畏惧、持之以恒、专注、独立自主 总结： 强调坚定的意志力和自信心，鼓励个人在面对挑战时坚持不懈和勇敢应对。 情感与人性 热爱、善良、幽默、感受、感恩、宽恕、幸福、满足感、谦逊 总结： 强调人与人之间的情感联结和个人对生活的积极态度，展现了对他人和生活的热情与感激。 亲密关系与交流 亲密关系、交流沟通、坦诚、忠诚、责任、感恩 总结： 关注人际关系的质量，强调坦诚、信任和互相理解在建立深厚关系中的重要性。 自律与理性 节制、克制、沉着冷静、理智、条理、耐心、自力更生 总结： 这类词反映了对自我约束、理性思考和有序生活的追求。 价值观与道德 真实性、公平、正义、平等、责任、忠诚、慷慨 总结： 这些词代表了道德和伦理的核心价值观，强调个人行为的正直和公平。 独立与自由 自由、独立自主、下苦功、孤独 总结： 强调个体的自主性和自我决策能力，关注个人的独立成长和追求。</p><p>安全感 安全感、安宁、稳定 总结： 这些词汇反映了对平静和有序生活的追求，渴望安全和安定的环境。 求知欲 求知欲、创造力、好奇心、反思、真相 总结： 这类词强调对知识的渴求和探究未知的动力，展现了强烈的认知欲望。 潜力与成就 潜力、天赋、胜利、优秀、自我发展、条理、精力、活力 总结： 这些词描述了个人的潜力和不断追求卓越的动力，注重发展内在天赋并达到目标。</p>`,10)]))}const p=i(t,[["render",h]]),r=JSON.parse('{"path":"/skill/js/aop.html","title":"","lang":"zh-CN","frontmatter":{"description":"AOP面向切面编程 将核心代码和非核心代码分离的一种方式 遇到新情况时，我会主动搜集尽可能多的信息。 3 我是那种真正享受日常生活中不确定性的人。 2 在做复杂或有挑战性的事情时，我会处于最佳状态。1 无论去什么地方，我都在寻找新事物或新体验。3 我把充满挑战的场合视为成长和学习的机会。2 我喜欢做那些让人感到有点恐惧的事情。2 我总是在寻找颠覆我对自...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-26T03:37:06.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://github.com/Justice996/skill/js/aop.html"}],["meta",{"property":"og:site_name","content":"Justice的博客"}],["meta",{"property":"og:description","content":"AOP面向切面编程 将核心代码和非核心代码分离的一种方式 遇到新情况时，我会主动搜集尽可能多的信息。 3 我是那种真正享受日常生活中不确定性的人。 2 在做复杂或有挑战性的事情时，我会处于最佳状态。1 无论去什么地方，我都在寻找新事物或新体验。3 我把充满挑战的场合视为成长和学习的机会。2 我喜欢做那些让人感到有点恐惧的事情。2 我总是在寻找颠覆我对自..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-26T03:37:06.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-26T03:37:06.000Z"}]]},"git":{"createdTime":1732592226000,"updatedTime":1732592226000,"contributors":[{"name":"justice","username":"justice","email":"1393080039@qq.com","commits":1,"url":"https://github.com/justice"}]},"readingTime":{"minutes":4.97,"words":1490},"filePathRelative":"skill/js/aop.md","excerpt":"","autoDesc":true}');export{p as comp,r as data};
